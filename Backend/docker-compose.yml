version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: chronochat-postgres
    environment:
      POSTGRES_DB: chronochat
      POSTGRES_USER: chronochat
      POSTGRES_PASSWORD: chronochat
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - chronochat-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chronochat -d chronochat"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: chronochat-redis
    command: redis-server --appendonly yes --requirepass chronochat
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chronochat-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "chronochat", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chronochat-backend
    environment:
      - DATABASE_URL=postgresql://chronochat:chronochat@postgres:5432/chronochat
      - REDIS_URL=redis://:chronochat@redis:6379
      - SECRET_KEY=your-super-secret-key-change-in-production-please
      - DEBUG=false
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - chronochat-network
    restart: unless-stopped
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: chronochat-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - chronochat-network
    restart: unless-stopped

networks:
  chronochat-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
